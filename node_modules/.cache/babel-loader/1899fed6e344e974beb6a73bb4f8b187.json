{"ast":null,"code":"var _jsxFileName = \"/Users/bag-yeongmi/GreenerFrontEnd/src/Components/pages/board/MarketChange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MarketChange() {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [img, setImg] = useState(\"\");\n  const {\n    boardsId\n  } = useParams();\n\n  const encodeFileToBase64 = fileBlob => {\n    const reader = new FileReader();\n    reader.readAsDataURL(fileBlob);\n    return new Promise(resolve => {\n      reader.onload = () => {\n        setImg(reader.result);\n        resolve();\n      };\n    });\n  };\n\n  useEffect(() => {\n    axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n    axios.get(`/api/v1/boards/${boardsId}/detail`).then(response => {\n      setTitle(response.data.title);\n      setContent(response.data.content);\n      setImg(response.data.img);\n    });\n  }, []);\n  const data = {\n    title: title,\n    content: content\n  };\n\n  function Update(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"files\", img[0]);\n    const json = JSON.stringify(data);\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    formData.append(\"boardsUpdateRequest\", blob);\n    console.log(...formData);\n    axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n    axios.put(`/api/v1/boards/${boardsId}`, formData).then(window.location.href = `/marketdetail/${boardsId}`, alert('수정되었습니다.'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC218\\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"\\uC81C \\uBAA9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), \"\\uB0B4 \\uC6A9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: content,\n        onChange: e => {\n          setContent(e.target.value);\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), \"\\uC774\\uBBF8\\uC9C0 \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"\",\n        width: \"20%\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: \"multiple\",\n        onChange: e => {\n          setImg(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        href: `/marketdetail/${boardsId}`,\n        variant: \"outline-secondary\",\n        children: \"\\xA0 \\uCDE8\\uC18C \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: Update,\n        variant: \"outline-success\",\n        children: \"\\xA0 \\uC218\\uC815 \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MarketChange, \"8YgunPgzZw/SxJPjR0DvhN7SQqA=\", false, function () {\n  return [useParams];\n});\n\n_c = MarketChange;\nexport default MarketChange; // import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n// function MarketChange() {\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n//     const {boardsId} = useParams();\n//     const saveImage = (e) => {\n//       e.preventDefault();\n//       if(e.target.files[0]){\n//         URL.revokeObjectURL(img.preview_URL);\n//         const preview_URL = URL.createObjectURL(e.target.files[0]);\n//         setImg(() => (\n//           {\n//             image_file: e.target.files[0],\n//             preview_URL: preview_URL\n//           }\n//         ))\n//       }\n//     }\n//     const deleteImage = () => {\n//       URL.revokeObjectURL(img.preview_URL);\n//       setImg({\n//         image_file: \"\",\n//         preview_URL: \"img/default_image.png\"\n//       })\n//     }\n//     useEffect(() => {\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n//         .then()\n//       }, [])\n//       const Update = async () => {\n//         const formData = new FormData();\n//         if(img.image_file){\n//           formData.append(\"files\", img.image_file);}\n//           const data = {\n//             title,\n//             content\n//         }\n//         const json = JSON.stringify(data)\n//         const blob = new Blob([json], { type: \"application/json\" });\n//         formData.append(\"boardsUpdateRequest\", blob); \n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//         .then(\n//             // window.location.href = \"/market\",\n//             alert('수정되었습니다.')\n//         )\n//       }\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//       <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//         <i class=\"fa-solid fa-xmark\"></i>\n//       </Button>\n//     <input \n//               type=\"file\"\n//               accept=\"image/*\"\n//               onChange={saveImage}\n//               onClick={(e) => e.target.value = null}\n//             />\n// <div>\n//           <img src={img.preview_URL} width=\"20%\" height=\"200px\" />\n//           <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//             <i class=\"fa-solid fa-xmark\"></i>\n//           </Button>\n//         </div><br/>\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n//     </form>\n//     </>\n//     )\n// }\n// export default MarketChange;\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState({\n//     image_file: \"\",\n//     preview_URL: \"img/default_image.png\",\n//   });\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(result.image)\n//     });\n//   }, [])\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n//   const handleSubmit = useCallback(async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       // 이미지를 선택했을 때만 formdata에 넣음\n//       formData.append(\"file\", image.image_file);\n//       // 수정할 땐 board_id를 보내자\n//       formData.append(\"id\", boardsId);\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n//     }\n//   }, [canSubmit]);\n//   return (\n//       <>\n//       <h1>수정하기</h1>\n//       <form>\n//       제 목 <input \n//           value={title}\n//           onChange={(e)=> {setTitle(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       내 용 <input \n//           value={content}\n//           onChange={(e)=> {setContent(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       이미지 <img \n//           src={image}\n//           alt=\"\"\n//           width=\"20%\" height=\"200px\"\n//       />\n//         {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//           <i class=\"fa-solid fa-xmark\"></i>\n//         </Button> */}\n//       <input \n//                 type=\"file\"\n//                 accept=\"image/*\"\n//                 // onChange={saveImage}\n//                 onClick={(e) => e.target.value = null}\n//               />\n//   <div>\n//             <img src={image.preview_URL} width=\"20%\" height=\"200px\" />\n//             {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//               <i class=\"fa-solid fa-xmark\"></i>\n//             </Button> */}\n//           </div><br/>\n//       <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//       <Button onClick={handleSubmit} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n//       </form>\n//       </>\n//       )\n// }\n// export default MarketChange;\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import ImageUploader from \"./ImageUploader\";\n// import TextArea from \"./TextArea\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState(\"\");\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       console.log(result)\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(result.img)\n//     });\n//   }, [])\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n//   const handleSubmit = useCallback(async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       // 이미지를 선택했을 때만 formdata에 넣음\n//       formData.append(\"file\", image.image_file);\n//       // 수정할 땐 board_id를 보내자\n//       axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//       await axios.put(`/api/v1/boards/${boardsId}`, formData);\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n//     }\n//   }, [canSubmit]);\n//   return (\n//     <div className=\"addBoard-wrapper\">\n//       <div className=\"addBoard-header\">\n//         게시물 수정하기 🖊️\n//       </div>\n//       <div className=\"submitButton\">\n//         {canSubmit() ? (\n//           <Button\n//             onClick={handleSubmit}\n//             className=\"success-button\"\n//             variant=\"outlined\"\n//           >\n//             수정하기😃\n//           </Button>\n//         ) : (\n//           <Button\n//             className=\"disable-button\"\n//             variant=\"outlined\"\n//             size=\"large\"\n//           >\n//             제목과 내용을 모두 입력하세요😭\n//           </Button>\n//         )}\n//       </div>\n//       <div className=\"addBoard-body\">\n//       이미지 <img \n//         src={image}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//         <TextArea setTitle={setTitle} setContent={setContent} title={title} content={content}/>\n//       </div>\n//     </div>\n//   );\n// }\n// export default MarketChange\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketChange\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Button","MarketChange","title","setTitle","content","setContent","img","setImg","boardsId","encodeFileToBase64","fileBlob","reader","FileReader","readAsDataURL","Promise","resolve","onload","result","defaults","headers","common","localStorage","getItem","get","then","response","data","Update","e","preventDefault","formData","FormData","append","json","JSON","stringify","blob","Blob","type","console","log","put","window","location","href","alert","target","value","files"],"sources":["/Users/bag-yeongmi/GreenerFrontEnd/src/Components/pages/board/MarketChange.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button } from \"react-bootstrap\";\n\nfunction MarketChange() {\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [img, setImg] = useState(\"\");\n\n    const {boardsId} = useParams();\n\n    const encodeFileToBase64 = (fileBlob) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(fileBlob);\n      return new Promise((resolve) => {\n        reader.onload = () => {\n          setImg(reader.result);\n          resolve()\n        }\n      })\n    }\n\n    useEffect(() => {\n       \n        axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n        axios.get(`/api/v1/boards/${boardsId}/detail`)\n        \n        .then((response)  => { \n          setTitle(response.data.title);\n          setContent(response.data.content);\n          setImg(response.data.img);\n        })\n        \n      }, [])\n      \n      const data = {\n        title: title,\n        content: content,\n\n    }\n\n      function Update(e) {\n        e.preventDefault()\n\n        const formData = new FormData();\n        formData.append(\"files\",img[0]);\n    \n      \n      const json = JSON.stringify(data)\n      const blob = new Blob([json], { type: \"application/json\" });\n      formData.append(\"boardsUpdateRequest\", blob); \n\n      console.log(...formData)\n\n        axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n        axios.put(`/api/v1/boards/${boardsId}`, formData)\n        .then(\n            window.location.href = `/marketdetail/${boardsId}`,\n            alert('수정되었습니다.')\n        )\n      }\n\nreturn (\n    <>\n    <h1>수정하기</h1>\n    <form>\n    제 목 <input \n        value={title}\n        onChange={(e)=> {setTitle(e.target.value)}}\n        type=\"text\"\n    /><br/>\n    내 용 <input \n        value={content}\n        onChange={(e)=> {setContent(e.target.value)}}\n        type=\"text\"\n    /><br/>\n    이미지 <img \n        src={img}\n        alt=\"\"\n        width=\"20%\" height=\"200px\"\n    />\n\n    <input \n          type=\"file\"\n          multiple=\"multiple\"\n          onChange={(e) => {setImg(e.target.files[0])}}\n          \n        /><br/>\n\n    <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n    <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n\n    </form>\n    </>\n    )\n}\n\nexport default MarketChange;\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n\n// function MarketChange() {\n\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n\n//     const {boardsId} = useParams();\n\n//     const saveImage = (e) => {\n//       e.preventDefault();\n//       if(e.target.files[0]){\n//         URL.revokeObjectURL(img.preview_URL);\n//         const preview_URL = URL.createObjectURL(e.target.files[0]);\n//         setImg(() => (\n//           {\n//             image_file: e.target.files[0],\n//             preview_URL: preview_URL\n//           }\n//         ))\n//       }\n//     }\n\n//     const deleteImage = () => {\n//       URL.revokeObjectURL(img.preview_URL);\n//       setImg({\n//         image_file: \"\",\n//         preview_URL: \"img/default_image.png\"\n//       })\n//     }\n\n//     useEffect(() => {\n      \n       \n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n        \n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n//         .then()\n        \n//       }, [])\n      \n\n\n//       const Update = async () => {\n\n//         const formData = new FormData();\n//         if(img.image_file){\n          \n//           formData.append(\"files\", img.image_file);}\n\n//           const data = {\n//             title,\n//             content\n//         }\n\n//         const json = JSON.stringify(data)\n//         const blob = new Blob([json], { type: \"application/json\" });\n//         formData.append(\"boardsUpdateRequest\", blob); \n\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//         .then(\n//             // window.location.href = \"/market\",\n//             alert('수정되었습니다.')\n//         )\n//       }\n\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//       <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//         <i class=\"fa-solid fa-xmark\"></i>\n//       </Button>\n\n//     <input \n//               type=\"file\"\n//               accept=\"image/*\"\n//               onChange={saveImage}\n//               onClick={(e) => e.target.value = null}\n//             />\n\n// <div>\n//           <img src={img.preview_URL} width=\"20%\" height=\"200px\" />\n//           <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//             <i class=\"fa-solid fa-xmark\"></i>\n//           </Button>\n//         </div><br/>\n\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n\n//     </form>\n//     </>\n//     )\n// }\n\n// export default MarketChange;\n\n\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n\n\n\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState({\n//     image_file: \"\",\n//     preview_URL: \"img/default_image.png\",\n//   });\n\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(result.image)\n//     });\n//   }, [])\n\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n\n//   const handleSubmit = useCallback(async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       // 이미지를 선택했을 때만 formdata에 넣음\n//       formData.append(\"file\", image.image_file);\n//       // 수정할 땐 board_id를 보내자\n//       formData.append(\"id\", boardsId);\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n\n//     }\n\n//   }, [canSubmit]);\n\n//   return (\n//       <>\n//       <h1>수정하기</h1>\n//       <form>\n//       제 목 <input \n//           value={title}\n//           onChange={(e)=> {setTitle(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       내 용 <input \n//           value={content}\n//           onChange={(e)=> {setContent(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       이미지 <img \n//           src={image}\n//           alt=\"\"\n//           width=\"20%\" height=\"200px\"\n//       />\n//         {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//           <i class=\"fa-solid fa-xmark\"></i>\n//         </Button> */}\n\n//       <input \n//                 type=\"file\"\n//                 accept=\"image/*\"\n//                 // onChange={saveImage}\n//                 onClick={(e) => e.target.value = null}\n//               />\n\n//   <div>\n//             <img src={image.preview_URL} width=\"20%\" height=\"200px\" />\n//             {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//               <i class=\"fa-solid fa-xmark\"></i>\n//             </Button> */}\n//           </div><br/>\n\n//       <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//       <Button onClick={handleSubmit} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n\n//       </form>\n//       </>\n//       )\n// }\n\n// export default MarketChange;\n\n\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import ImageUploader from \"./ImageUploader\";\n// import TextArea from \"./TextArea\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n\n\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState(\"\");\n\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       console.log(result)\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(result.img)\n//     });\n//   }, [])\n\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n\n//   const handleSubmit = useCallback(async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       // 이미지를 선택했을 때만 formdata에 넣음\n//       formData.append(\"file\", image.image_file);\n//       // 수정할 땐 board_id를 보내자\n\n//       axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n\n//       await axios.put(`/api/v1/boards/${boardsId}`, formData);\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n\n//     }\n\n//   }, [canSubmit]);\n\n//   return (\n//     <div className=\"addBoard-wrapper\">\n//       <div className=\"addBoard-header\">\n//         게시물 수정하기 🖊️\n//       </div>\n//       <div className=\"submitButton\">\n//         {canSubmit() ? (\n//           <Button\n//             onClick={handleSubmit}\n//             className=\"success-button\"\n//             variant=\"outlined\"\n//           >\n//             수정하기😃\n//           </Button>\n//         ) : (\n//           <Button\n//             className=\"disable-button\"\n//             variant=\"outlined\"\n//             size=\"large\"\n//           >\n//             제목과 내용을 모두 입력하세요😭\n//           </Button>\n//         )}\n//       </div>\n//       <div className=\"addBoard-body\">\n//       이미지 <img \n//         src={image}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//         <TextArea setTitle={setTitle} setContent={setContent} title={title} content={content}/>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default MarketChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EAEpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;EAEA,MAAM;IAACY;EAAD,IAAaV,SAAS,EAA5B;;EAEA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;IACvC,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;IACAD,MAAM,CAACE,aAAP,CAAqBH,QAArB;IACA,OAAO,IAAII,OAAJ,CAAaC,OAAD,IAAa;MAC9BJ,MAAM,CAACK,MAAP,GAAgB,MAAM;QACpBT,MAAM,CAACI,MAAM,CAACM,MAAR,CAAN;QACAF,OAAO;MACR,CAHD;IAID,CALM,CAAP;EAMD,CATD;;EAWAlB,SAAS,CAAC,MAAM;IAEZE,KAAK,CAACmB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,aAA9B,IAAgD,UAASC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EAAxF;IACAvB,KAAK,CAACwB,GAAN,CAAW,kBAAiBf,QAAS,SAArC,EAECgB,IAFD,CAEOC,QAAD,IAAe;MACnBtB,QAAQ,CAACsB,QAAQ,CAACC,IAAT,CAAcxB,KAAf,CAAR;MACAG,UAAU,CAACoB,QAAQ,CAACC,IAAT,CAActB,OAAf,CAAV;MACAG,MAAM,CAACkB,QAAQ,CAACC,IAAT,CAAcpB,GAAf,CAAN;IACD,CAND;EAQD,CAXM,EAWJ,EAXI,CAAT;EAaE,MAAMoB,IAAI,GAAG;IACXxB,KAAK,EAAEA,KADI;IAEXE,OAAO,EAAEA;EAFE,CAAb;;EAMA,SAASuB,MAAT,CAAgBC,CAAhB,EAAmB;IACjBA,CAAC,CAACC,cAAF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwB1B,GAAG,CAAC,CAAD,CAA3B;IAGF,MAAM2B,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAb;IACA,MAAMU,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACJ,IAAD,CAAT,EAAiB;MAAEK,IAAI,EAAE;IAAR,CAAjB,CAAb;IACAR,QAAQ,CAACE,MAAT,CAAgB,qBAAhB,EAAuCI,IAAvC;IAEAG,OAAO,CAACC,GAAR,CAAY,GAAGV,QAAf;IAEE/B,KAAK,CAACmB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,aAA9B,IAAgD,UAASC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EAAxF;IACAvB,KAAK,CAAC0C,GAAN,CAAW,kBAAiBjC,QAAS,EAArC,EAAwCsB,QAAxC,EACCN,IADD,CAEIkB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,iBAAgBpC,QAAS,EAFrD,EAGIqC,KAAK,CAAC,UAAD,CAHT;EAKD;;EAEP,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA,0CACI;QACA,KAAK,EAAE3C,KADP;QAEA,QAAQ,EAAG0B,CAAD,IAAM;UAACzB,QAAQ,CAACyB,CAAC,CAACkB,MAAF,CAASC,KAAV,CAAR;QAAyB,CAF1C;QAGA,IAAI,EAAC;MAHL;QAAA;QAAA;QAAA;MAAA,QADJ,eAKE;QAAA;QAAA;QAAA;MAAA,QALF,iCAMI;QACA,KAAK,EAAE3C,OADP;QAEA,QAAQ,EAAGwB,CAAD,IAAM;UAACvB,UAAU,CAACuB,CAAC,CAACkB,MAAF,CAASC,KAAV,CAAV;QAA2B,CAF5C;QAGA,IAAI,EAAC;MAHL;QAAA;QAAA;QAAA;MAAA,QANJ,eAUE;QAAA;QAAA;QAAA;MAAA,QAVF,sCAWI;QACA,GAAG,EAAEzC,GADL;QAEA,GAAG,EAAC,EAFJ;QAGA,KAAK,EAAC,KAHN;QAGY,MAAM,EAAC;MAHnB;QAAA;QAAA;QAAA;MAAA,QAXJ,eAiBA;QACM,IAAI,EAAC,MADX;QAEM,QAAQ,EAAC,UAFf;QAGM,QAAQ,EAAGsB,CAAD,IAAO;UAACrB,MAAM,CAACqB,CAAC,CAACkB,MAAF,CAASE,KAAT,CAAe,CAAf,CAAD,CAAN;QAA0B;MAHlD;QAAA;QAAA;QAAA;MAAA,QAjBA,eAsBM;QAAA;QAAA;QAAA;MAAA,QAtBN,eAwBA,QAAC,MAAD;QAAQ,IAAI,EAAG,iBAAgBxC,QAAS,EAAxC;QAA2C,OAAO,EAAC,mBAAnD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAxBA,eAyBA,QAAC,MAAD;QAAQ,OAAO,EAAEmB,MAAjB;QAAyB,OAAO,EAAC,iBAAjC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAzBA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADJ;AAiCC;;GA5FQ1B,Y;UAMcH,S;;;KANdG,Y;AA8FT,eAAeA,YAAf},"metadata":{},"sourceType":"module"}