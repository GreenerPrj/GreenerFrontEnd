{"ast":null,"code":"var _jsxFileName = \"/Users/bag-yeongmi/GreenerFrontEnd/src/Components/pages/board/MarketChange.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n// function MarketChange() {\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n//     const {boardsId} = useParams();\n//     const encodeFileToBase64 = (fileBlob) => {\n//       const reader = new FileReader();\n//       reader.readAsDataURL(fileBlob);\n//       return new Promise((resolve) => {\n//         reader.onload = () => {\n//           setImg(reader.result);\n//           resolve()\n//         }\n//       })\n//     }\n//     useEffect(() => {\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n//       }, [])\n//       const data = {\n//         title: title,\n//         content: content,\n//     }\n//       function Update(e) {\n//         e.preventDefault()\n//         const formData = new FormData();\n//         formData.append(\"files\",img[0]);\n//       const json = JSON.stringify(data)\n//       const blob = new Blob([json], { type: \"application/json\" });\n//       formData.append(\"boardsUpdateRequest\", blob); \n//       console.log(formData)\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData)\n//         .then(\n//             // window.location.href = `/marketdetail/${boardsId}`,\n//             alert('수정되었습니다.')\n//         )\n//       }\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//     <input \n//           type=\"file\"\n//           multiple=\"multiple\"\n//           onChange={(e) => {encodeFileToBase64(e.target.files[0])}}\n//         /><br/>\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n//     </form>\n//     </>\n//     )\n// }\n// export default MarketChange;\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n// function MarketChange() {\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n//     const {boardsId} = useParams();\n//     const saveImage = (e) => {\n//       e.preventDefault();\n//       if(e.target.files[0]){\n//         URL.revokeObjectURL(img.preview_URL);\n//         const preview_URL = URL.createObjectURL(e.target.files[0]);\n//         setImg(() => (\n//           {\n//             image_file: e.target.files[0],\n//             preview_URL: preview_URL\n//           }\n//         ))\n//       }\n//       else {\n//         const preview_URL = `/api/v1/boards/${boardsId}/detail/images`\n//         setImg(() => (\n//           {\n//             preview_URL: preview_URL\n//           }\n//         )\n//        )\n//       }\n//     }\n//     const deleteImage = () => {\n//       URL.revokeObjectURL(img.preview_URL);\n//       setImg({\n//         image_file: \"\",\n//         preview_URL: \"img/default_image.png\"\n//       })\n//     }\n//     useEffect(() => {\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n//         .then()\n//       }, [])\n//       const Update = async () => {\n//         const formData = new FormData();\n//         if(img.image_file){\n//           formData.append(\"files\", img.image_file);}\n//           const data = {\n//             title,\n//             content\n//         }\n//         const json = JSON.stringify(data)\n//         const blob = new Blob([json], { type: \"application/json\" });\n//         formData.append(\"boardsUpdateRequest\", blob); \n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//         .then(\n//             // window.location.href = \"/market\",\n//             alert('수정되었습니다.')\n//         )\n//       }\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//       <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//         <i class=\"fa-solid fa-xmark\"></i>\n//       </Button>\n//     <input \n//               type=\"file\"\n//               accept=\"image/*\"\n//               onChange={saveImage}\n//               onClick={(e) => e.target.value = null}\n//             />\n// <div>\n//           <img src={img.preview_URL} width=\"20%\" height=\"200px\" />\n//           <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//             <i class=\"fa-solid fa-xmark\"></i>\n//           </Button>\n//         </div><br/>\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n//     </form>\n//     </>\n//     )\n// }\n// export default MarketChange;\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState({\n//     image_file: \"\",\n//     preview_URL: \"img/default_image.png\",\n//   });\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(result.image)\n//     });\n//   }, [])\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n//   const handleSubmit = useCallback(async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       // 이미지를 선택했을 때만 formdata에 넣음\n//       formData.append(\"file\", image.image_file);\n//       // 수정할 땐 board_id를 보내자\n//       formData.append(\"id\", boardsId);\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n//     }\n//   }, [canSubmit]);\n//   return (\n//       <>\n//       <h1>수정하기</h1>\n//       <form>\n//       제 목 <input \n//           value={title}\n//           onChange={(e)=> {setTitle(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       내 용 <input \n//           value={content}\n//           onChange={(e)=> {setContent(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       이미지 <img \n//           src={image}\n//           alt=\"\"\n//           width=\"20%\" height=\"200px\"\n//       />\n//         {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//           <i class=\"fa-solid fa-xmark\"></i>\n//         </Button> */}\n//       <input \n//                 type=\"file\"\n//                 accept=\"image/*\"\n//                 // onChange={saveImage}\n//                 onClick={(e) => e.target.value = null}\n//               />\n//   <div>\n//             <img src={image.preview_URL} width=\"20%\" height=\"200px\" />\n//             {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//               <i class=\"fa-solid fa-xmark\"></i>\n//             </Button> */}\n//           </div><br/>\n//       <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//       <Button onClick={handleSubmit} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n//       </form>\n//       </>\n//       )\n// }\n// export default MarketChange;\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import ImageUploader from \"./ImageUploader\";\n// import TextArea from \"./TextArea\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState({\n//     image_file: \"\",\n//     preview_URL: `/api/v1/boards/${boardsId}/detail/images`});\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       console.log(result)\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(e.target.files[0]);\n//       console.log({...image})\n//     });\n//   }, [])\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n//   const handleSubmit = useCallback(async () => {\n//     try {\n//       const data = {\n//         title: title,\n//         content: content\n//       }\n//       const formData = new FormData();\n//       formData.append(\"files\", image.image_file);\n//       const json = JSON.stringify(data)\n//       const blob = new Blob([json], { type: \"application/json\" });\n//       formData.append(\"boardsUpdateRequest\", blob); \n//       console.log(...formData)\n//       // formData.append(\"title\", title);\n//       // formData.append(\"content\", content);\n//       // // 이미지를 선택했을 때만 formdata에 넣음\n//       // formData.append(\"file\", image.image_file);\n//       // // 수정할 땐 board_id를 보내자\n//       axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//       await axios.put(`/api/v1/boards/${boardsId}`, formData);\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n//     }\n//   }, [canSubmit]);\n//   return (\n//     <div className=\"addBoard-wrapper\">\n//       <div className=\"addBoard-header\">\n//         게시물 수정하기 🖊️\n//       </div>\n//       <div className=\"submitButton\">\n//         {canSubmit() ? (\n//           <Button\n//             onClick={handleSubmit}\n//             className=\"success-button\"\n//             variant=\"outlined\"\n//           >\n//             수정하기😃\n//           </Button>\n//         ) : (\n//           <Button\n//             className=\"disable-button\"\n//             variant=\"outlined\"\n//             size=\"large\"\n//           >\n//             제목과 내용을 모두 입력하세요😭\n//           </Button>\n//         )}\n//       </div>\n//       <div className=\"addBoard-body\">\n//         <ImageUploader setImage={setImage} preview_URL={image.preview_URL} width=\"20%\" height=\"200px\"/>\n//         <TextArea setTitle={setTitle} setContent={setContent} title={title} content={content}/>\n//       </div>\n//     </div>\n//   );\n// }\n// export default MarketChange\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MarketChange = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [img, setImg] = useState({\n    image_file: \"\",\n    preview_URL: \"img/default_image.png\"\n  });\n  const {\n    boardsId\n  } = useParams();\n\n  const saveImage = e => {\n    e.preventDefault();\n\n    if (e.target.files[0]) {\n      URL.revokeObjectURL(img.preview_URL);\n      const preview_URL = URL.createObjectURL(e.target.files[0]);\n      setImg(() => ({\n        image_file: e.target.files[0],\n        preview_URL: preview_URL\n      }));\n    }\n  };\n\n  const deleteImage = () => {\n    URL.revokeObjectURL(img.preview_URL);\n    setImg({\n      image_file: \"\",\n      preview_URL: \"img/default_image.png\"\n    });\n  }; //   useEffect(() => {\n  //     axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n  //     axios.get(`/api/v1/boards/${boardsId}/detail`)\n  //     .then((response)  => { \n  //       setTitle(response.data.title);\n  //       setContent(response.data.content);\n  //       setImg(response.data.img);\n  //     })\n  //   }, [])\n  //   const data = {\n  //     title: title,\n  //     content: content,\n  // }\n  //   function Update(e) {\n  //     e.preventDefault()\n  //     const formData = new FormData();\n  //     formData.append(\"files\",img[0]);\n  //   const json = JSON.stringify(data)\n  //   const blob = new Blob([json], { type: \"application/json\" });\n  //   formData.append(\"boardsUpdateRequest\", blob); \n  //   console.log(formData)\n  //     axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n  //     axios.put(`/api/v1/boards/${boardsId}`, formData)\n  //     .then(\n  //         // window.location.href = `/marketdetail/${boardsId}`,\n  //         alert('수정되었습니다.')\n  //     )\n  //   }\n\n\n  useEffect(() => {\n    axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n    axios.get(`/api/v1/boards/${boardsId}/detail`).then(response => {\n      setTitle(response.data.title);\n      setContent(response.data.content);\n      setImg(response.data.img);\n    });\n  }, []);\n\n  const onSubmit = async () => {\n    const formData = new FormData();\n\n    if (img.image_file) {\n      formData.append(\"files\", img.image_file);\n    }\n\n    let dataSet = {\n      title,\n      content\n    };\n    const json = JSON.stringify(dataSet);\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    formData.append(\"boardsUpdateRequest\", blob);\n    axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n    await axios.put(`/api/v1/boards/${boardsId}`, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    window.location.href = `/marketdetail/${boardsId}`;\n    alert('수정되었습니다.');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [\"\\uC81C \\uBAA9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => {\n        setTitle(e.target.value);\n      },\n      type: \"text\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }, this), \"\\uB0B4 \\uC6A9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: content,\n      onChange: e => {\n        setContent(e.target.value);\n      },\n      type: \"text\",\n      placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 9\n    }, this), \"\\uC774\\uBBF8\\uC9C0 \", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"\",\n      width: \"20%\",\n      height: \"200px\",\n      onChange: e => {\n        setImg(e.target.files);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: saveImage,\n      onClick: e => e.target.value = null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: img.preview_URL,\n        width: \"20%\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        variant: \"contained\",\n        onClick: deleteImage,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-xmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      href: `/marketdetail/${boardsId}`,\n      variant: \"outline-secondary\",\n      children: \"\\xA0 \\uCDE8\\uC18C \\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-success\",\n      onClick: onSubmit,\n      children: \"\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 603,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MarketChange, \"hU6fJM8UYu/RoDSEk72iF5v7yAk=\", false, function () {\n  return [useParams];\n});\n\n_c = MarketChange;\nexport default MarketChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketChange\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Button","MarketChange","title","setTitle","content","setContent","img","setImg","image_file","preview_URL","boardsId","saveImage","e","preventDefault","target","files","URL","revokeObjectURL","createObjectURL","deleteImage","defaults","headers","common","localStorage","getItem","get","then","response","data","onSubmit","formData","FormData","append","dataSet","json","JSON","stringify","blob","Blob","type","put","window","location","href","alert","value"],"sources":["/Users/bag-yeongmi/GreenerFrontEnd/src/Components/pages/board/MarketChange.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n\n// function MarketChange() {\n\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n\n//     const {boardsId} = useParams();\n\n//     const encodeFileToBase64 = (fileBlob) => {\n//       const reader = new FileReader();\n//       reader.readAsDataURL(fileBlob);\n//       return new Promise((resolve) => {\n//         reader.onload = () => {\n//           setImg(reader.result);\n//           resolve()\n//         }\n//       })\n//     }\n\n//     useEffect(() => {\n       \n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n        \n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n        \n//       }, [])\n      \n//       const data = {\n//         title: title,\n//         content: content,\n\n//     }\n\n//       function Update(e) {\n//         e.preventDefault()\n\n//         const formData = new FormData();\n//         formData.append(\"files\",img[0]);\n    \n      \n//       const json = JSON.stringify(data)\n//       const blob = new Blob([json], { type: \"application/json\" });\n//       formData.append(\"boardsUpdateRequest\", blob); \n\n//       console.log(formData)\n\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData)\n//         .then(\n//             // window.location.href = `/marketdetail/${boardsId}`,\n//             alert('수정되었습니다.')\n//         )\n//       }\n\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n\n//     <input \n//           type=\"file\"\n//           multiple=\"multiple\"\n//           onChange={(e) => {encodeFileToBase64(e.target.files[0])}}\n          \n//         /><br/>\n\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n\n//     </form>\n//     </>\n//     )\n// }\n\n// export default MarketChange;\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n\n// function MarketChange() {\n\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n\n//     const {boardsId} = useParams();\n\n//     const saveImage = (e) => {\n//       e.preventDefault();\n//       if(e.target.files[0]){\n//         URL.revokeObjectURL(img.preview_URL);\n//         const preview_URL = URL.createObjectURL(e.target.files[0]);\n//         setImg(() => (\n//           {\n//             image_file: e.target.files[0],\n//             preview_URL: preview_URL\n//           }\n//         ))\n\n//       }\n//       else {\n//         const preview_URL = `/api/v1/boards/${boardsId}/detail/images`\n//         setImg(() => (\n//           {\n\n//             preview_URL: preview_URL\n//           }\n//         )\n//        )\n//       }\n//     }\n\n//     const deleteImage = () => {\n//       URL.revokeObjectURL(img.preview_URL);\n//       setImg({\n//         image_file: \"\",\n//         preview_URL: \"img/default_image.png\"\n//       })\n//     }\n\n//     useEffect(() => {\n      \n       \n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n        \n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n//         .then()\n        \n//       }, [])\n      \n\n\n//       const Update = async () => {\n\n//         const formData = new FormData();\n//         if(img.image_file){\n          \n//           formData.append(\"files\", img.image_file);}\n\n//           const data = {\n//             title,\n//             content\n//         }\n\n//         const json = JSON.stringify(data)\n//         const blob = new Blob([json], { type: \"application/json\" });\n//         formData.append(\"boardsUpdateRequest\", blob); \n\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//         .then(\n//             // window.location.href = \"/market\",\n//             alert('수정되었습니다.')\n//         )\n//       }\n\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//       <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//         <i class=\"fa-solid fa-xmark\"></i>\n//       </Button>\n\n//     <input \n//               type=\"file\"\n//               accept=\"image/*\"\n//               onChange={saveImage}\n//               onClick={(e) => e.target.value = null}\n//             />\n\n// <div>\n//           <img src={img.preview_URL} width=\"20%\" height=\"200px\" />\n//           <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//             <i class=\"fa-solid fa-xmark\"></i>\n//           </Button>\n//         </div><br/>\n\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n\n//     </form>\n//     </>\n//     )\n// }\n\n// export default MarketChange;\n\n\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n\n\n\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState({\n//     image_file: \"\",\n//     preview_URL: \"img/default_image.png\",\n//   });\n\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(result.image)\n//     });\n//   }, [])\n\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n\n//   const handleSubmit = useCallback(async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       // 이미지를 선택했을 때만 formdata에 넣음\n//       formData.append(\"file\", image.image_file);\n//       // 수정할 땐 board_id를 보내자\n//       formData.append(\"id\", boardsId);\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n\n//     }\n\n//   }, [canSubmit]);\n\n//   return (\n//       <>\n//       <h1>수정하기</h1>\n//       <form>\n//       제 목 <input \n//           value={title}\n//           onChange={(e)=> {setTitle(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       내 용 <input \n//           value={content}\n//           onChange={(e)=> {setContent(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       이미지 <img \n//           src={image}\n//           alt=\"\"\n//           width=\"20%\" height=\"200px\"\n//       />\n//         {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//           <i class=\"fa-solid fa-xmark\"></i>\n//         </Button> */}\n\n//       <input \n//                 type=\"file\"\n//                 accept=\"image/*\"\n//                 // onChange={saveImage}\n//                 onClick={(e) => e.target.value = null}\n//               />\n\n//   <div>\n//             <img src={image.preview_URL} width=\"20%\" height=\"200px\" />\n//             {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//               <i class=\"fa-solid fa-xmark\"></i>\n//             </Button> */}\n//           </div><br/>\n\n//       <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//       <Button onClick={handleSubmit} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n\n//       </form>\n//       </>\n//       )\n// }\n\n// export default MarketChange;\n\n\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import ImageUploader from \"./ImageUploader\";\n// import TextArea from \"./TextArea\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n\n\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState({\n//     image_file: \"\",\n//     preview_URL: `/api/v1/boards/${boardsId}/detail/images`});\n\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       console.log(result)\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(e.target.files[0]);\n//       console.log({...image})\n//     });\n//   }, [])\n\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n\n\n\n//   const handleSubmit = useCallback(async () => {\n//     try {\n\n\n//       const data = {\n//         title: title,\n//         content: content\n//       }\n\n//       const formData = new FormData();\n//       formData.append(\"files\", image.image_file);\n      \n//       const json = JSON.stringify(data)\n//       const blob = new Blob([json], { type: \"application/json\" });\n//       formData.append(\"boardsUpdateRequest\", blob); \n\n//       console.log(...formData)\n\n//       // formData.append(\"title\", title);\n//       // formData.append(\"content\", content);\n//       // // 이미지를 선택했을 때만 formdata에 넣음\n//       // formData.append(\"file\", image.image_file);\n//       // // 수정할 땐 board_id를 보내자\n\n//       axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n\n//       await axios.put(`/api/v1/boards/${boardsId}`, formData);\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n\n//     }\n\n//   }, [canSubmit]);\n\n//   return (\n//     <div className=\"addBoard-wrapper\">\n//       <div className=\"addBoard-header\">\n//         게시물 수정하기 🖊️\n//       </div>\n//       <div className=\"submitButton\">\n//         {canSubmit() ? (\n//           <Button\n//             onClick={handleSubmit}\n//             className=\"success-button\"\n//             variant=\"outlined\"\n//           >\n//             수정하기😃\n//           </Button>\n//         ) : (\n//           <Button\n//             className=\"disable-button\"\n//             variant=\"outlined\"\n//             size=\"large\"\n//           >\n//             제목과 내용을 모두 입력하세요😭\n//           </Button>\n//         )}\n//       </div>\n//       <div className=\"addBoard-body\">\n\n//         <ImageUploader setImage={setImage} preview_URL={image.preview_URL} width=\"20%\" height=\"200px\"/>\n//         <TextArea setTitle={setTitle} setContent={setContent} title={title} content={content}/>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default MarketChange\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\n\nconst MarketChange = () => {\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [img, setImg] = useState({\n      image_file: \"\",\n      preview_URL: \"img/default_image.png\"\n    });\n\n    \n\n    const {boardsId} = useParams();\n\n    const saveImage = (e) => {\n      e.preventDefault();\n      if(e.target.files[0]){\n        URL.revokeObjectURL(img.preview_URL);\n        const preview_URL = URL.createObjectURL(e.target.files[0]);\n        setImg(() => (\n          {\n            image_file: e.target.files[0],\n            preview_URL: preview_URL\n          }\n        ))\n      }\n    }\n\n    const deleteImage = () => {\n      URL.revokeObjectURL(img.preview_URL);\n      setImg({\n        image_file: \"\",\n        preview_URL: \"img/default_image.png\"\n      })\n    }\n\n\n  //   useEffect(() => {\n       \n  //     axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n  //     axios.get(`/api/v1/boards/${boardsId}/detail`)\n      \n  //     .then((response)  => { \n  //       setTitle(response.data.title);\n  //       setContent(response.data.content);\n  //       setImg(response.data.img);\n  //     })\n      \n  //   }, [])\n    \n  //   const data = {\n  //     title: title,\n  //     content: content,\n\n  // }\n\n  //   function Update(e) {\n  //     e.preventDefault()\n\n  //     const formData = new FormData();\n  //     formData.append(\"files\",img[0]);\n  \n    \n  //   const json = JSON.stringify(data)\n  //   const blob = new Blob([json], { type: \"application/json\" });\n  //   formData.append(\"boardsUpdateRequest\", blob); \n\n  //   console.log(formData)\n\n  //     axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n  //     axios.put(`/api/v1/boards/${boardsId}`, formData)\n  //     .then(\n  //         // window.location.href = `/marketdetail/${boardsId}`,\n  //         alert('수정되었습니다.')\n  //     )\n  //   }\n\n\n\n\n\n\n\n    useEffect(() => {\n\n      axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n      axios.get(`/api/v1/boards/${boardsId}/detail`)\n      \n      .then((response)  => { \n        setTitle(response.data.title);\n        setContent(response.data.content);\n        setImg(response.data.img);\n      })\n      \n    }, [])\n\n    const onSubmit = async () => {\n      const formData = new FormData();\n        if(img.image_file){\n          \n          formData.append(\"files\", img.image_file);}\n    \n          let dataSet = {\n            title,\n            content,\n          };\n      \n        const json = JSON.stringify(dataSet)\n        const blob = new Blob([json], { type: \"application/json\" });\n        formData.append(\"boardsUpdateRequest\", blob); \n\n        axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n        await axios.put(`/api/v1/boards/${boardsId}`, formData, {\n              headers: {\n              \"Content-Type\": \"multipart/form-data\", \n          }})\n\n            window.location.href = `/marketdetail/${boardsId}`;\n            alert('수정되었습니다.');\n\n      \n    }\n   \n    return (\n      <form >\n          제 목 <input \n          value={title}\n          onChange={(e)=> {setTitle(e.target.value)}}\n          type=\"text\"\n          placeholder=\"제목을 입력하세요\"\n      /><br/>\n      내 용 <input \n          value={content}\n          onChange={(e)=> {setContent(e.target.value)}}\n          type=\"text\"\n          placeholder=\"내용을 입력하세요\"\n      /><br/>\n\n      이미지 <img \n          src={img}\n          alt=\"\"\n          width=\"20%\" height=\"200px\"\n          onChange={(e)=> {setImg(e.target.files)}}\n      />\n      \n        <input \n          type=\"file\"\n          accept=\"image/*\"\n          onChange={saveImage}\n          onClick={(e) => e.target.value = null}\n        /><br/>\n\n        <div>\n          <img src={img.preview_URL} width=\"20%\" height=\"200px\" />\n          <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n            <i class=\"fa-solid fa-xmark\"></i>\n          </Button>\n        </div>\n\n        <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n        <Button variant=\"outline-success\" onClick={onSubmit}>\n          수정\n        </Button>\n\n      </form>\n  );\n}\n\nexport default MarketChange;"],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC;IAC7BW,UAAU,EAAE,EADiB;IAE7BC,WAAW,EAAE;EAFgB,CAAD,CAA9B;EAOA,MAAM;IAACC;EAAD,IAAaZ,SAAS,EAA5B;;EAEA,MAAMa,SAAS,GAAIC,CAAD,IAAO;IACvBA,CAAC,CAA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"},"metadata":{},"sourceType":"module"}