{"ast":null,"code":"var _jsxFileName = \"/Users/bag-yeongmi/GreenerFrontEnd/src/Components/pages/board/MarketChange.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n// function MarketChange() {\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n//     const {boardsId} = useParams();\n//     const encodeFileToBase64 = (fileBlob) => {\n//       const reader = new FileReader();\n//       reader.readAsDataURL(fileBlob);\n//       return new Promise((resolve) => {\n//         reader.onload = () => {\n//           setImg(reader.result);\n//           resolve()\n//         }\n//       })\n//     }\n//     useEffect(() => {\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n//       }, [])\n//       const data = {\n//         title: title,\n//         content: content,\n//         img: img\n//     }\n//       function Update(e) {\n//         e.preventDefault()\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, data)\n//         .then(\n//             window.location.href = \"/market\",\n//             alert('수정되었습니다.')\n//         )\n//       }\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//     <input \n//           type=\"file\"\n//           multiple=\"multiple\"\n//           onChange={(e) => {encodeFileToBase64(e.target.files[0])}}\n//         /><br/>\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n//     </form>\n//     </>\n//     )\n// }\n// export default MarketChange;\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n// function MarketChange() {\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n//     const {boardsId} = useParams();\n//     const saveImage = (e) => {\n//       e.preventDefault();\n//       if(e.target.files[0]){\n//         URL.revokeObjectURL(img.preview_URL);\n//         const preview_URL = URL.createObjectURL(e.target.files[0]);\n//         setImg(() => (\n//           {\n//             image_file: e.target.files[0],\n//             preview_URL: preview_URL\n//           }\n//         ))\n//       }\n//     }\n//     const deleteImage = () => {\n//       URL.revokeObjectURL(img.preview_URL);\n//       setImg({\n//         image_file: \"\",\n//         preview_URL: \"img/default_image.png\"\n//       })\n//     }\n//     useEffect(() => {\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n//         .then()\n//       }, [])\n//       const Update = async () => {\n//         const formData = new FormData();\n//         if(img.image_file){\n//           formData.append(\"file\", img.image_file);}\n//           const data = {\n//             title,\n//             content\n//         }\n//         const json = JSON.stringify(data)\n//         const blob = new Blob([json], { type: \"application/json\" });\n//         formData.append(\"request\", blob); \n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//         .then(\n//             // window.location.href = \"/market\",\n//             alert('수정되었습니다.')\n//         )\n//       }\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//       <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//         <i class=\"fa-solid fa-xmark\"></i>\n//       </Button>\n//     <input \n//               type=\"file\"\n//               accept=\"image/*\"\n//               onChange={saveImage}\n//               onClick={(e) => e.target.value = null}\n//             />\n// <div>\n//           <img src={img.preview_URL} width=\"20%\" height=\"200px\" />\n//           <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//             <i class=\"fa-solid fa-xmark\"></i>\n//           </Button>\n//         </div><br/>\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n//     </form>\n//     </>\n//     )\n// }\n// export default MarketChange;\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState({\n//     image_file: \"\",\n//     preview_URL: \"img/default_image.png\",\n//   });\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(result.image)\n//     });\n//   }, [])\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n//   const handleSubmit = useCallback(async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       // 이미지를 선택했을 때만 formdata에 넣음\n//       formData.append(\"file\", image.image_file);\n//       // 수정할 땐 board_id를 보내자\n//       formData.append(\"id\", boardsId);\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n//     }\n//   }, [canSubmit]);\n//   return (\n//       <>\n//       <h1>수정하기</h1>\n//       <form>\n//       제 목 <input \n//           value={title}\n//           onChange={(e)=> {setTitle(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       내 용 <input \n//           value={content}\n//           onChange={(e)=> {setContent(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       이미지 <img \n//           src={image}\n//           alt=\"\"\n//           width=\"20%\" height=\"200px\"\n//       />\n//         {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//           <i class=\"fa-solid fa-xmark\"></i>\n//         </Button> */}\n//       <input \n//                 type=\"file\"\n//                 accept=\"image/*\"\n//                 // onChange={saveImage}\n//                 onClick={(e) => e.target.value = null}\n//               />\n//   <div>\n//             <img src={image.preview_URL} width=\"20%\" height=\"200px\" />\n//             {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//               <i class=\"fa-solid fa-xmark\"></i>\n//             </Button> */}\n//           </div><br/>\n//       <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//       <Button onClick={handleSubmit} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n//       </form>\n//       </>\n//       )\n// }\n// export default MarketChange;\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport ImageUploader from \"./ImageUploader\";\nimport TextArea from \"./TextArea\";\nimport { Button } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MarketChange = () => {\n  _s();\n\n  const navigate = useNavigate(); // URI 파라미터 가져오기\n\n  const {\n    boardsId\n  } = useParams(); // 게시판 제목, 내용, 사진\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState({\n    image_file: \"\"\n  }); // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n  // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n  // title, content, image의 상태를 바꿔줌\n\n  useEffect(() => {\n    const getBoard = async () => {\n      axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n      const {\n        data\n      } = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n      return data;\n    };\n\n    getBoard().then(result => {\n      console.log(result);\n      setTitle(result.title);\n      setContent(result.content); // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n      // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n\n      setImage(result.img);\n    });\n  }, []);\n  const canSubmit = useCallback(() => {\n    return content !== \"\" && title !== \"\";\n  }, [image, title, content]);\n  const handleSubmit = useCallback(async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"content\", content); // 이미지를 선택했을 때만 formdata에 넣음\n\n      formData.append(\"file\", image.image_file); // 수정할 땐 board_id를 보내자\n\n      axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n      await axios.put(`/api/v1/boards/${boardsId}`, formData);\n      window.alert(\"😎수정이 완료되었습니다😎\"); // 이전 페이지로 돌아가기\n\n      window.location.href = `/marketdetail/${boardsId}`;\n    } catch (e) {// 서버에서 받은 에러 메시지 출력\n    }\n  }, [canSubmit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addBoard-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addBoard-header\",\n      children: \"\\uAC8C\\uC2DC\\uBB3C \\uC218\\uC815\\uD558\\uAE30 \\uD83D\\uDD8A\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submitButton\",\n      children: canSubmit() ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        className: \"success-button\",\n        variant: \"outlined\",\n        children: \"\\uC218\\uC815\\uD558\\uAE30\\uD83D\\uDE03\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        className: \"disable-button\",\n        variant: \"outlined\",\n        size: \"large\",\n        children: \"\\uC81C\\uBAA9\\uACFC \\uB0B4\\uC6A9\\uC744 \\uBAA8\\uB450 \\uC785\\uB825\\uD558\\uC138\\uC694\\uD83D\\uDE2D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addBoard-body\",\n      children: [/*#__PURE__*/_jsxDEV(ImageUploader, {\n        setImage: setImage,\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        setTitle: setTitle,\n        setContent: setContent,\n        title: title,\n        content: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MarketChange, \"z6kd04GXM0L0OP6vm6+RjhfjhAE=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = MarketChange;\nexport default MarketChange;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketChange\");","map":{"version":3,"names":["useSelector","useNavigate","useParams","useCallback","useEffect","useState","ImageUploader","TextArea","Button","axios","MarketChange","navigate","boardsId","title","setTitle","content","setContent","image","setImage","image_file","getBoard","defaults","headers","common","localStorage","getItem","data","get","then","result","console","log","img","canSubmit","handleSubmit","formData","FormData","append","put","window","alert","location","href","e"],"sources":["/Users/bag-yeongmi/GreenerFrontEnd/src/Components/pages/board/MarketChange.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n\n// function MarketChange() {\n\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n\n//     const {boardsId} = useParams();\n\n//     const encodeFileToBase64 = (fileBlob) => {\n//       const reader = new FileReader();\n//       reader.readAsDataURL(fileBlob);\n//       return new Promise((resolve) => {\n//         reader.onload = () => {\n//           setImg(reader.result);\n//           resolve()\n//         }\n//       })\n//     }\n\n//     useEffect(() => {\n       \n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n        \n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n        \n//       }, [])\n      \n//       const data = {\n//         title: title,\n//         content: content,\n//         img: img\n//     }\n\n//       function Update(e) {\n//         e.preventDefault()\n\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, data)\n//         .then(\n//             window.location.href = \"/market\",\n//             alert('수정되었습니다.')\n//         )\n//       }\n\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n\n//     <input \n//           type=\"file\"\n//           multiple=\"multiple\"\n//           onChange={(e) => {encodeFileToBase64(e.target.files[0])}}\n          \n//         /><br/>\n\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n\n//     </form>\n//     </>\n//     )\n// }\n\n// export default MarketChange;\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import { Button } from \"react-bootstrap\";\n\n// function MarketChange() {\n\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [img, setImg] = useState(\"\");\n\n//     const {boardsId} = useParams();\n\n//     const saveImage = (e) => {\n//       e.preventDefault();\n//       if(e.target.files[0]){\n//         URL.revokeObjectURL(img.preview_URL);\n//         const preview_URL = URL.createObjectURL(e.target.files[0]);\n//         setImg(() => (\n//           {\n//             image_file: e.target.files[0],\n//             preview_URL: preview_URL\n//           }\n//         ))\n//       }\n//     }\n\n//     const deleteImage = () => {\n//       URL.revokeObjectURL(img.preview_URL);\n//       setImg({\n//         image_file: \"\",\n//         preview_URL: \"img/default_image.png\"\n//       })\n//     }\n\n//     useEffect(() => {\n      \n       \n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.get(`/api/v1/boards/${boardsId}/detail`)\n        \n//         .then((response)  => { \n//           setTitle(response.data.title);\n//           setContent(response.data.content);\n//           setImg(response.data.img);\n//         })\n//         .then()\n        \n//       }, [])\n      \n\n\n//       const Update = async () => {\n\n//         const formData = new FormData();\n//         if(img.image_file){\n          \n//           formData.append(\"file\", img.image_file);}\n\n//           const data = {\n//             title,\n//             content\n//         }\n\n//         const json = JSON.stringify(data)\n//         const blob = new Blob([json], { type: \"application/json\" });\n//         formData.append(\"request\", blob); \n\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//         .then(\n//             // window.location.href = \"/market\",\n//             alert('수정되었습니다.')\n//         )\n//       }\n\n// return (\n//     <>\n//     <h1>수정하기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//     /><br/>\n//     이미지 <img \n//         src={img}\n//         alt=\"\"\n//         width=\"20%\" height=\"200px\"\n//     />\n//       <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//         <i class=\"fa-solid fa-xmark\"></i>\n//       </Button>\n\n//     <input \n//               type=\"file\"\n//               accept=\"image/*\"\n//               onChange={saveImage}\n//               onClick={(e) => e.target.value = null}\n//             />\n\n// <div>\n//           <img src={img.preview_URL} width=\"20%\" height=\"200px\" />\n//           <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//             <i class=\"fa-solid fa-xmark\"></i>\n//           </Button>\n//         </div><br/>\n\n//     <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//     <Button onClick={Update} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n\n//     </form>\n//     </>\n//     )\n// }\n\n// export default MarketChange;\n\n\n// import {useSelector} from \"react-redux\";\n// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useCallback, useEffect, useState} from \"react\";\n// import {Button} from \"@mui/material\";\n// import axios from \"axios\";\n\n\n\n// const MarketChange = () => {\n//   const navigate = useNavigate();\n//   // URI 파라미터 가져오기\n//   const {boardsId} = useParams();\n//   // 게시판 제목, 내용, 사진\n//   const [title, setTitle] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [image, setImage] = useState({\n//     image_file: \"\",\n//     preview_URL: \"img/default_image.png\",\n//   });\n\n//   // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n//   // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n//   // title, content, image의 상태를 바꿔줌\n//   useEffect(() => {\n//     const getBoard = async () => {\n//       const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n//       return data;\n//     }\n//     getBoard().then((result) => {\n//       setTitle(result.title);\n//       setContent(result.content);\n//       // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n//       // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n//       setImage(result.image)\n//     });\n//   }, [])\n\n//   const canSubmit = useCallback(() => {\n//     return content !== \"\" && title !== \"\";\n//   }, [image, title, content]);\n\n//   const handleSubmit = useCallback(async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"title\", title);\n//       formData.append(\"content\", content);\n//       // 이미지를 선택했을 때만 formdata에 넣음\n//       formData.append(\"file\", image.image_file);\n//       // 수정할 땐 board_id를 보내자\n//       formData.append(\"id\", boardsId);\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.put(`/api/v1/boards/${boardsId}`, formData, {\n//           headers: {\n//           \"Content-Type\": \"multipart/form-data\", \n//       }})\n//       window.alert(\"😎수정이 완료되었습니다😎\");\n//       // 이전 페이지로 돌아가기\n//       window.location.href = `/marketdetail/${boardsId}`;\n//     } catch (e) {\n//       // 서버에서 받은 에러 메시지 출력\n\n//     }\n\n//   }, [canSubmit]);\n\n//   return (\n//       <>\n//       <h1>수정하기</h1>\n//       <form>\n//       제 목 <input \n//           value={title}\n//           onChange={(e)=> {setTitle(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       내 용 <input \n//           value={content}\n//           onChange={(e)=> {setContent(e.target.value)}}\n//           type=\"text\"\n//       /><br/>\n//       이미지 <img \n//           src={image}\n//           alt=\"\"\n//           width=\"20%\" height=\"200px\"\n//       />\n//         {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//           <i class=\"fa-solid fa-xmark\"></i>\n//         </Button> */}\n\n//       <input \n//                 type=\"file\"\n//                 accept=\"image/*\"\n//                 // onChange={saveImage}\n//                 onClick={(e) => e.target.value = null}\n//               />\n\n//   <div>\n//             <img src={image.preview_URL} width=\"20%\" height=\"200px\" />\n//             {/* <Button color=\"error\" variant=\"contained\" onClick={deleteImage}>\n//               <i class=\"fa-solid fa-xmark\"></i>\n//             </Button> */}\n//           </div><br/>\n\n//       <Button href={`/marketdetail/${boardsId}`} variant=\"outline-secondary\">&nbsp; 취소 &nbsp;</Button>\n//       <Button onClick={handleSubmit} variant=\"outline-success\">&nbsp; 수정 &nbsp;</Button>\n\n//       </form>\n//       </>\n//       )\n// }\n\n// export default MarketChange;\n\n\nimport {useSelector} from \"react-redux\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {useCallback, useEffect, useState} from \"react\";\nimport ImageUploader from \"./ImageUploader\";\nimport TextArea from \"./TextArea\";\nimport {Button} from \"@mui/material\";\nimport axios from \"axios\";\n\n\nconst MarketChange = () => {\n  const navigate = useNavigate();\n  // URI 파라미터 가져오기\n  const {boardsId} = useParams();\n  // 게시판 제목, 내용, 사진\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState({\n    image_file: \"\",\n  });\n\n  // 사용자가 직전에 등록한 게시물의 상태를 그대로 보여주기 위해\n  // 컴포넌트가 마운트되고 URI 파라미터에 해당하는 board를 가져와서\n  // title, content, image의 상태를 바꿔줌\n  useEffect(() => {\n    const getBoard = async () => {\n      axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n      const {data} = await axios.get(`/api/v1/boards/${boardsId}/detail`);\n      return data;\n    }\n    getBoard().then((result) => {\n      console.log(result)\n      setTitle(result.title);\n      setContent(result.content);\n      // 이미지는 파일을 불러올 필요가 없이 미리보기 url만 가져온다.\n      // 이미지를 선택하지 않고 올리면 db에 저장되어 있는 이미지를 그대로 사용!\n      setImage(result.img)\n    });\n  }, [])\n\n  const canSubmit = useCallback(() => {\n    return content !== \"\" && title !== \"\";\n  }, [image, title, content]);\n\n  const handleSubmit = useCallback(async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"content\", content);\n      // 이미지를 선택했을 때만 formdata에 넣음\n      formData.append(\"file\", image.image_file);\n      // 수정할 땐 board_id를 보내자\n\n      axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n\n      await axios.put(`/api/v1/boards/${boardsId}`, formData);\n      window.alert(\"😎수정이 완료되었습니다😎\");\n      // 이전 페이지로 돌아가기\n      window.location.href = `/marketdetail/${boardsId}`;\n    } catch (e) {\n      // 서버에서 받은 에러 메시지 출력\n\n    }\n\n  }, [canSubmit]);\n\n  return (\n    <div className=\"addBoard-wrapper\">\n      <div className=\"addBoard-header\">\n        게시물 수정하기 🖊️\n      </div>\n      <div className=\"submitButton\">\n        {canSubmit() ? (\n          <Button\n            onClick={handleSubmit}\n            className=\"success-button\"\n            variant=\"outlined\"\n          >\n            수정하기😃\n          </Button>\n        ) : (\n          <Button\n            className=\"disable-button\"\n            variant=\"outlined\"\n            size=\"large\"\n          >\n            제목과 내용을 모두 입력하세요😭\n          </Button>\n        )}\n      </div>\n      <div className=\"addBoard-body\">\n        <ImageUploader setImage={setImage} image={image}/>\n        <TextArea setTitle={setTitle} setContent={setContent} title={title} content={content}/>\n      </div>\n    </div>\n  );\n}\n\nexport default MarketChange"],"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"},"metadata":{},"sourceType":"module"}