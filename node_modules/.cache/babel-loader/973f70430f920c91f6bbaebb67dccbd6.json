{"ast":null,"code":"var _jsxFileName = \"/Users/bag-yeongmi/react-workspace/todo-react-app/src/App.js\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport AddTodo from \"./AddTodo.js\";\nimport \"./App.css\";\nimport { Paper, List, Container, Grid, Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { call, signout } from \"./service/ApiService\"; // signout 추가\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.add = item => {\n      call(\"/todo\", \"POST\", item).then(response => this.setState({\n        items: response.data\n      }));\n    };\n\n    this.delete = item => {\n      call(\"/todo\", \"DELETE\", item).then(response => this.setState({\n        items: response.data\n      }));\n    };\n\n    this.update = item => {\n      call(\"/todo\", \"PUT\", item).then(response => this.setState({\n        items: response.data\n      }));\n    };\n\n    this.state = {\n      items: [],\n\n      /* 1. 로딩중이라는 상태이다. 생성자에 상태 변수를 추가한다. */\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    /* 2. componentDidMount에서 todo리스트를 가져오는 \n    GET 리퀘스트가 성공적으로 리턴하는 경우 loading을 false로 고친다. \n    더 이상 로딩중이 아니라는 뜻이다. */\n    call(\"/todo\", \"GET\", null).then(response => this.setState({\n      items: response.data,\n      loading: false\n    }));\n  }\n\n  render() {\n    var todoItems = this.state.items.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        margin: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: this.state.items.map((item, idx) => /*#__PURE__*/_jsxDEV(Todo, {\n          item: item,\n          delete: this.delete,\n          update: this.update\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this); // navigationBar 추가\n\n\n    var navigationBar = /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          justify: \"space-between\",\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"\\uC624\\uB298\\uC758 \\uD560\\uC77C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              onClick: signout,\n              children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n    /* 로딩중이 아닐 때 렌더링 할 부분 */\n\n\n    var todoListPage = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [navigationBar, \" \", /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n          add: this.add\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TodoList\",\n          children: todoItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n    /* 로딩중일 때 렌더링 할 부분 */\n\n\n    var loadingPage = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" \\uB85C\\uB529\\uC911.. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }, this);\n\n    var content = loadingPage;\n\n    if (!this.state.loading) {\n      /* 로딩중이 아니면 todoListPage를 선택*/\n      content = todoListPage;\n    }\n    /* 선택한 content 렌더링 */\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Todo","AddTodo","Paper","List","Container","Grid","Button","AppBar","Toolbar","Typography","call","signout","App","Component","constructor","props","add","item","then","response","setState","items","data","delete","update","state","loading","componentDidMount","render","todoItems","length","margin","map","idx","id","navigationBar","todoListPage","loadingPage","content"],"sources":["/Users/bag-yeongmi/react-workspace/todo-react-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Todo from \"./Todo\";\nimport AddTodo from \"./AddTodo.js\";\nimport \"./App.css\";\nimport {\n  Paper,\n  List,\n  Container,\n  Grid,\n  Button,\n  AppBar,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { call, signout } from \"./service/ApiService\"; // signout 추가\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      /* 1. 로딩중이라는 상태이다. 생성자에 상태 변수를 추가한다. */\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    /* 2. componentDidMount에서 todo리스트를 가져오는 \n    GET 리퀘스트가 성공적으로 리턴하는 경우 loading을 false로 고친다. \n    더 이상 로딩중이 아니라는 뜻이다. */\n    call(\"/todo\", \"GET\", null).then((response) =>\n      this.setState({ items: response.data, loading: false })\n    );\n  }\n\n  add = (item) => {\n    call(\"/todo\", \"POST\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  delete = (item) => {\n    call(\"/todo\", \"DELETE\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  update = (item) => {\n    call(\"/todo\", \"PUT\", item).then((response) =>\n      this.setState({ items: response.data })\n    );\n  };\n\n  render() {\n    var todoItems = this.state.items.length > 0 && (\n      <Paper style={{ margin: 16 }}>\n        <List>\n          {this.state.items.map((item, idx) => (\n            <Todo\n              item={item}\n              key={item.id}\n              delete={this.delete}\n              update={this.update}\n            />\n          ))}\n        </List>\n      </Paper>\n    );\n\n    // navigationBar 추가\n    var navigationBar = (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Grid justify=\"space-between\" container>\n            <Grid item>\n              <Typography variant=\"h6\">오늘의 할일</Typography>\n            </Grid>\n            <Grid>\n              <Button color=\"inherit\" onClick={signout}>\n                로그아웃\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    );\n\n    /* 로딩중이 아닐 때 렌더링 할 부분 */\n    var todoListPage = (\n      <div>\n        {navigationBar} {/* 네비게이션 바 렌더링 */}\n        <Container maxWidth=\"md\">\n          <AddTodo add={this.add} />\n          <div className=\"TodoList\">{todoItems}</div>\n        </Container>\n      </div>\n    );\n\n    /* 로딩중일 때 렌더링 할 부분 */\n    var loadingPage = <h1> 로딩중.. </h1>;\n\n    var content = loadingPage;\n\n    if (!this.state.loading) {\n      /* 로딩중이 아니면 todoListPage를 선택*/\n      content = todoListPage;\n    }\n\n    /* 선택한 content 렌더링 */\n    return <div className=\"App\">{content}</div>;\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}