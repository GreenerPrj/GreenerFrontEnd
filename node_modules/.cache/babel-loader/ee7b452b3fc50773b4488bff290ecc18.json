{"ast":null,"code":"var _jsxFileName = \"/Users/bag-yeongmi/react-workspace/todo-react-app/src/Components/pages/MyplantsWrite.js\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\"; // import { Form, FormGroup, Label, Col, Input, Button } from \"reactstrap\";\n// import Plan from \"./Plan\";\n// function MyplantsWrite() {\n//   const [name, SetName] = useState(\"\");\n//   const [bornDate, SetBornDate] = useState(\"\");\n//   const [imagePath, SetImagePath] = useState(\"\");\n//     return (\n//       <>\n//         <Form noValidate >\n//         <FormGroup row>\n//           <Label\n//             for=\"myplants\"\n//             sm={2}>\n//             식물 이름\n//           </Label>\n//           <Col sm={10}>\n//             <Input onChange={(e)=>{\n//               SetName(e.target.value);\n//             }}/>\n//           </Col>\n//         </FormGroup>\n//         <FormGroup row>\n//           <Label\n//             for=\"date\"\n//             sm={2}>\n//             등록일\n//           </Label>\n//           <Col sm={10}>\n//             <Input onChange={(e)=>{\n//               SetBornDate(e.target.value);\n//             }}/>\n//             {/* <Plan /> */}\n//           </Col>\n//         </FormGroup>\n//         <FormGroup row>\n//           <Label\n//             for=\"imagePath\"\n//             sm={2}>\n//             File\n//           </Label>\n//           <Col sm={10}>\n//             <Input onChange={(e)=>{\n//               SetImagePath(e.target.value);\n//             }}/>\n//           </Col>\n//         </FormGroup>\n//         <Button onClick={()=>{\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         let data = {\n//           name : name,\n//           bornDate : bornDate,\n//           imagePath: imagePath,\n//         }\n//         axios.post('/api/v1/my-plants',\n//         JSON.stringify(data), {\n//           headers: {\n//             \"Content-Type\": `application/json`,\n//           },\n//         })\n//           .then(response => response.json())\n//             .then(response => {\n//              console.log(response.data);\n//             })\n//         }\n//       }\n//         >등록</Button>\n//       </Form>\n//   </>\n//   );\n// }\n// export default MyplantsWrite;\n// import React from \"react\";\n\nimport { Button, TextField, Link, Grid, Container, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyplantsWrite extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // 오브젝트에서 form에 저장된 데이터를 맵의 형태로 바꿔줌.\n\n    const data = new FormData(event.target);\n    data.get(\"name\");\n    data.get(\"bornDate\");\n    data.get(\"imagePath\");\n    axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n    axios.post('/api/v1/my-plants', data, {\n      headers: {\n        \"Content-Type\": `application/json`,\n        accessToken: localStorage.getItem(\"access\")\n      }\n    }).then(response => {\n      window.location.href = \"/myplants\";\n      alert('등록되었습니다.');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      style: {\n        marginTop: \"8%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h1\",\n              variant: \"h5\",\n              children: \"\\uC2DD\\uBB3C \\uB4F1\\uB85D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoComplete: \"fname\",\n              name: \"name\",\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"name\",\n              label: \"\\uC2DD\\uBB3C \\uC774\\uB984\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              name: \"bornDate\",\n              required: true,\n              fullWidth: true,\n              id: \"bornDate\",\n              label: \"\\uB4F1\\uB85D\\uC77C\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              name: \"imagePath\",\n              required: true,\n              fullWidth: true,\n              label: \"\\uC774\\uBBF8\\uC9C0\",\n              id: \"imagePath\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyplantsWrite;","map":{"version":3,"names":["axios","React","useState","Button","TextField","Link","Grid","Container","Typography","MyplantsWrite","Component","constructor","props","handleSubmit","bind","event","preventDefault","data","FormData","target","get","defaults","headers","common","localStorage","getItem","post","accessToken","then","response","window","location","href","alert","render","marginTop"],"sources":["/Users/bag-yeongmi/react-workspace/todo-react-app/src/Components/pages/MyplantsWrite.js"],"sourcesContent":["import axios from \"axios\";\nimport React, {useState} from \"react\";\n// import { Form, FormGroup, Label, Col, Input, Button } from \"reactstrap\";\n// import Plan from \"./Plan\";\n\n\n// function MyplantsWrite() {\n//   const [name, SetName] = useState(\"\");\n//   const [bornDate, SetBornDate] = useState(\"\");\n//   const [imagePath, SetImagePath] = useState(\"\");\n\n//     return (\n\n//       <>\n//         <Form noValidate >\n//         <FormGroup row>\n//           <Label\n//             for=\"myplants\"\n//             sm={2}>\n//             식물 이름\n//           </Label>\n//           <Col sm={10}>\n//             <Input onChange={(e)=>{\n//               SetName(e.target.value);\n//             }}/>\n//           </Col>\n//         </FormGroup>\n//         <FormGroup row>\n//           <Label\n//             for=\"date\"\n//             sm={2}>\n//             등록일\n//           </Label>\n//           <Col sm={10}>\n//             <Input onChange={(e)=>{\n//               SetBornDate(e.target.value);\n//             }}/>\n//             {/* <Plan /> */}\n//           </Col>\n//         </FormGroup>\n//         <FormGroup row>\n//           <Label\n//             for=\"imagePath\"\n//             sm={2}>\n//             File\n//           </Label>\n//           <Col sm={10}>\n//             <Input onChange={(e)=>{\n//               SetImagePath(e.target.value);\n//             }}/>\n//           </Col>\n//         </FormGroup>\n\n            \n//         <Button onClick={()=>{\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n          \n//         let data = {\n//           name : name,\n//           bornDate : bornDate,\n//           imagePath: imagePath,\n//         }\n//         axios.post('/api/v1/my-plants',\n//         JSON.stringify(data), {\n//           headers: {\n//             \"Content-Type\": `application/json`,\n//           },\n//         })\n          \n//           .then(response => response.json())\n\n//             .then(response => {\n//              console.log(response.data);\n//             })\n//         }\n//       }\n//         >등록</Button>\n//       </Form>\n//   </>\n//   );\n// }\n\n// export default MyplantsWrite;\n\n\n// import React from \"react\";\nimport {Button, TextField, Link, Grid, Container, Typography} from \"@material-ui/core\";\n\n\nclass MyplantsWrite extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    // 오브젝트에서 form에 저장된 데이터를 맵의 형태로 바꿔줌.\n    const data = new FormData(event.target);\n    data.get(\"name\");\n    data.get(\"bornDate\");\n    data.get(\"imagePath\");\n    axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n    axios.post('/api/v1/my-plants', data, {\n      headers: { \"Content-Type\": `application/json`,\n      accessToken: localStorage.getItem(\"access\")\n    }\n        }\n    ).then(\n      (response) => {\n        \n        window.location.href = \"/myplants\";\n        alert('등록되었습니다.')\n      }\n    );\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\" style={{ marginTop: \"8%\" }}>\n        <form noValidate onSubmit={this.handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography component=\"h1\" variant=\"h5\">\n                식물 등록\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"식물 이름\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                name=\"bornDate\"\n                required\n                fullWidth\n                id=\"bornDate\"\n                label=\"등록일\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                name=\"imagePath\"\n                required\n                fullWidth\n                label=\"이미지\"\n                id=\"imagePath\"\n                autoFocus\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                등록하기\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    );\n  }\n}\n\nexport default MyplantsWrite;"],"mappings":"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"},"metadata":{},"sourceType":"module"}