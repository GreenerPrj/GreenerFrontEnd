{"ast":null,"code":"var _jsxFileName = \"/Users/bag-yeongmi/react-workspace/todo-react-app/src/pages/Plan.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Form from \"react-bootstrap/Form\";\nimport { ko } from \"date-fns/esm/locale\";\nimport { getMonth, getDate } from \"date-fns\";\nimport \"./Plan.css\"; // import \"./day.css\"\n\nimport MyplantsTab from './MyPlantsTab';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Plan() {\n  _s();\n\n  // const [startDate, setStartDate] = useState(new Date());\n  const [date, setDate] = useState(new Date());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"React Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setDate,\n        value: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: \"Selected Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), ' ', date.toDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Plan, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n\n_c = Plan;\nexport default Plan;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plan\");","map":{"version":3,"names":["React","useState","DatePicker","Form","ko","getMonth","getDate","MyplantsTab","Calendar","Plan","date","setDate","Date","toDateString"],"sources":["/Users/bag-yeongmi/react-workspace/todo-react-app/src/pages/Plan.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Form from \"react-bootstrap/Form\";\nimport { ko } from \"date-fns/esm/locale\";\nimport { getMonth, getDate } from \"date-fns\";\nimport \"./Plan.css\";\n// import \"./day.css\"\nimport MyplantsTab from './MyPlantsTab';\nimport Calendar from 'react-calendar';\n\nfunction Plan() {\n    // const [startDate, setStartDate] = useState(new Date());\n\n    const [date, setDate] = useState(new Date());\n\n    return (\n        <>\n        {/* <MyplantsTab /> */}\n\n        \n        {/* <DatePicker \n          selected={startDate} \n          onChange={(date) => setStartDate(date)}\n          locale={ko}                   // 한글로 변경\n          dateFormat=\"yyyy.MM.dd (eee)\" // 시간 포맷 변경\n          showPopperArrow={false}       // 화살표 변경\n          //minDate={new Date()}          // 오늘 날짜 전은 선택 못하게\n          customInput={\t\t      // 날짜 뜨는 인풋 커스텀\n            <Form.Control as=\"textarea\" rows={1} style={{width:\"250px\"}}/> }\n          dayClassName={(d) =>\n              getDate(d) === getDate(startDate) && getMonth(d) === getMonth(startDate)\n                  ? 'normal-day selected-day'\n                  : 'normal-day'\n          }\n        /> */}\n          <h1 className='text-center'>React Calendar</h1>\n          <div className='calendar-container'>\n            <Calendar onChange={setDate} value={date} />\n          </div>\n          <p className='text-center'>\n            <span className='bold'>Selected Date:</span>{' '}\n            {date.toDateString()}\n          </p>\n      \n      \n\n        </>\n    )\n}\n\nexport default Plan;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,EAAT,QAAmB,qBAAnB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,UAAlC;AACA,OAAO,YAAP,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACZ;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAIW,IAAJ,EAAD,CAAhC;EAEA,oBACI;IAAA,wBAmBE;MAAI,SAAS,EAAC,aAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBF,eAoBE;MAAK,SAAS,EAAC,oBAAf;MAAA,uBACE,QAAC,QAAD;QAAU,QAAQ,EAAED,OAApB;QAA6B,KAAK,EAAED;MAApC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QApBF,eAuBE;MAAG,SAAS,EAAC,aAAb;MAAA,wBACE;QAAM,SAAS,EAAC,MAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAC+C,GAD/C,EAEGA,IAAI,CAACG,YAAL,EAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA,gBADJ;AAiCH;;GAtCQJ,I;;KAAAA,I;AAwCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}