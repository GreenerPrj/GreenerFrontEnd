{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return function* (action) {\n    yield put(startLoading(type)); //로딩 시작\n\n    try {\n      const response = yield call(request, action.payload);\n      yield put({\n        type: SUCCESS,\n        payload: response.data\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n    }\n\n    yield put(finishLoading(type));\n  };\n}","map":{"version":3,"names":["call","put","startLoading","finishLoading","createRequestActionTypes","type","SUCCESS","FAILURE","createRequestSaga","request","action","response","payload","data","e","error"],"sources":["/Users/bag-yeongmi/react-workspace/todo-react-app/src/lib/createRequestSaga.js"],"sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\n\nexport const createRequestActionTypes = type => {\n    const SUCCESS = `${type}_SUCCESS`;\n    const FAILURE = `${type}_FAILURE`;\n    return [type, SUCCESS, FAILURE];\n}\n\nexport default function createRequestSaga(type, request) {\n    const SUCCESS = `${type}_SUCCESS`;\n    const FAILURE = `${type}_FAILURE`;\n\n    return function*(action) {\n        yield put(startLoading(type)); //로딩 시작\n        try {\n            const response = yield call(request, action.payload);\n            yield put ({\n                type: SUCCESS,\n                payload: response.data\n            })\n        } catch(e) {\n            yield put({\n                type: FAILURE,\n                payload: e,\n                error: true\n            })\n        }\n        yield put(finishLoading(type))\n        }\n}\n\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AAEA,OAAO,MAAMC,wBAAwB,GAAGC,IAAI,IAAI;EAC5C,MAAMC,OAAO,GAAI,GAAED,IAAK,UAAxB;EACA,MAAME,OAAO,GAAI,GAAEF,IAAK,UAAxB;EACA,OAAO,CAACA,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,CAAP;AACH,CAJM;AAMP,eAAe,SAASC,iBAAT,CAA2BH,IAA3B,EAAiCI,OAAjC,EAA0C;EACrD,MAAMH,OAAO,GAAI,GAAED,IAAK,UAAxB;EACA,MAAME,OAAO,GAAI,GAAEF,IAAK,UAAxB;EAEA,OAAO,WAAUK,MAAV,EAAkB;IACrB,MAAMT,GAAG,CAACC,YAAY,CAACG,IAAD,CAAb,CAAT,CADqB,CACU;;IAC/B,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMX,IAAI,CAACS,OAAD,EAAUC,MAAM,CAACE,OAAjB,CAA3B;MACA,MAAMX,GAAG,CAAE;QACPI,IAAI,EAAEC,OADC;QAEPM,OAAO,EAAED,QAAQ,CAACE;MAFX,CAAF,CAAT;IAIH,CAND,CAME,OAAMC,CAAN,EAAS;MACP,MAAMb,GAAG,CAAC;QACNI,IAAI,EAAEE,OADA;QAENK,OAAO,EAAEE,CAFH;QAGNC,KAAK,EAAE;MAHD,CAAD,CAAT;IAKH;;IACD,MAAMd,GAAG,CAACE,aAAa,CAACE,IAAD,CAAd,CAAT;EACC,CAhBL;AAiBH"},"metadata":{},"sourceType":"module"}