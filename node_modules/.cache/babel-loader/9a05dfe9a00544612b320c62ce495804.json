{"ast":null,"code":"var _jsxFileName = \"/Users/bag-yeongmi/GreenerFrontEnd/src/Components/pages/board/MarketWrite.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from \"react\";\n// import axios from \"axios\";\n// function MarketWrite() {\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [tempFile, setTempFile] = useState();\n//     const data = {\n//         title: title,\n//         content: content,\n//     }\n//     // function Submit(e) {\n//     //     e.preventDefault();\n//     //     axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//     //     axios.post(\"/api/v1/boards\", data)     \n//     //         .then((response) => {\n//     //               window.location.href = \"/market\";\n//     //               alert('등록되었습니다.')\n//     //         });\n//     // }\n//     const handleClick = (e) => {\n//         var formdata = new FormData();\n//         for (let i = 0; i < tempFile.length; i++) {\n//             formdata.append(\"files\", tempFile[i]);\n//         }\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.post(\"/api/v1/boards\", formdata, {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }).then((res) => {\n//           console.log(res);\n//         });\n//     }\n// return (\n//     <>\n//     <h1>글쓰기</h1>\n//     <form onSubmit={handleClick}>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//         placeholder=\"제목을 입력하세요\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//         placeholder=\"내용을 입력하세요\"\n//     /><br/>\n//     {/* <form className=\"upload_input\">\n//          <input \n//         value={imagePath}\n//         onChange={onLoadFile}\n//         type=\"file\"\n//         accept=\"img/*\"\n//     />\n//     <label htmlFor=\"imgae\">파일 선택하기</label>\n//     </form> */}\n//     {/* <button id=\"btn-file-upload\">파일 업로드</button>\n//     <input\n//       type=\"file\"\n//       id=\"upload-file\"\n//       accept=\"image/*\"\n//     />  <br/> */}\n//     <input\n//       type=\"file\"\n//       multiple\n//       onChange={(e) => {\n//         setTempFile(e.target.files);\n//       }}\n//     />\n//     <button type=\"submit\">submit</button>\n//     </form>\n//     </>\n// )\n// }\n// export default MarketWrite;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MarketWrite = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n\n  const saveFileImage = e => {\n    setFile(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const DeleteFileImage = () => {\n    URL.revokeObjectURL(file);\n    setFile(\"\");\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file[0]);\n    let dataSet = {\n      title,\n      content\n    };\n    const json = JSON.stringify(dataSet);\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    formData.append(\"request\", blob);\n    axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n    axios.post(\"/api/v1/boards\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(response => {\n      console.log(response);\n      window.location.href = \"/market\";\n      alert('등록되었습니다.');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [\"\\uC81C \\uBAA9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => {\n        setTitle(e.target.value);\n      },\n      type: \"text\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), \"\\uB0B4 \\uC6A9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: content,\n      onChange: e => {\n        setContent(e.target.value);\n      },\n      type: \"text\",\n      placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: \"multiple\" // onChange={(e) => {setFile(e.target.files)}}\n      ,\n      onChange: saveFileImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [file && /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"sample\",\n        src: file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => DeleteFileImage(),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MarketWrite, \"a2eMM9lhP7ZFD46z+7ktpPIWZmI=\");\n\n_c = MarketWrite;\nexport default MarketWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketWrite\");","map":{"version":3,"names":["React","useState","axios","MarketWrite","title","setTitle","content","setContent","file","setFile","saveFileImage","e","URL","createObjectURL","target","files","DeleteFileImage","revokeObjectURL","onSubmit","preventDefault","formData","FormData","append","dataSet","json","JSON","stringify","blob","Blob","type","defaults","headers","common","localStorage","getItem","post","then","response","console","log","window","location","href","alert","value"],"sources":["/Users/bag-yeongmi/GreenerFrontEnd/src/Components/pages/board/MarketWrite.js"],"sourcesContent":["// import React, {useState} from \"react\";\n// import axios from \"axios\";\n\n\n// function MarketWrite() {\n\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     const [tempFile, setTempFile] = useState();\n\n//     const data = {\n//         title: title,\n//         content: content,\n//     }\n\n//     // function Submit(e) {\n//     //     e.preventDefault();\n\n//     //     axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//     //     axios.post(\"/api/v1/boards\", data)     \n//     //         .then((response) => {\n//     //               window.location.href = \"/market\";\n//     //               alert('등록되었습니다.')\n//     //         });\n//     // }\n\n//     const handleClick = (e) => {\n//         var formdata = new FormData();\n//         for (let i = 0; i < tempFile.length; i++) {\n//             formdata.append(\"files\", tempFile[i]);\n//         }\n        \n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.post(\"/api/v1/boards\", formdata, {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }).then((res) => {\n//           console.log(res);\n//         });\n        \n//     }\n\n// return (\n//     <>\n//     <h1>글쓰기</h1>\n//     <form onSubmit={handleClick}>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//         placeholder=\"제목을 입력하세요\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//         placeholder=\"내용을 입력하세요\"\n//     /><br/>\n//     {/* <form className=\"upload_input\">\n//          <input \n//         value={imagePath}\n//         onChange={onLoadFile}\n//         type=\"file\"\n//         accept=\"img/*\"\n        \n//     />\n//     <label htmlFor=\"imgae\">파일 선택하기</label>\n//     </form> */}\n//     {/* <button id=\"btn-file-upload\">파일 업로드</button>\n//     <input\n//       type=\"file\"\n//       id=\"upload-file\"\n//       accept=\"image/*\"\n//     />  <br/> */}\n//     <input\n//       type=\"file\"\n//       multiple\n//       onChange={(e) => {\n//         setTempFile(e.target.files);\n//       }}\n//     />\n//     <button type=\"submit\">submit</button>\n\n//     </form>\n//     </>\n// )\n// }\n\n// export default MarketWrite;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst MarketWrite = () => {\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [file, setFile] = useState(\"\");\n    \n    const saveFileImage = (e) => {\n      setFile(URL.createObjectURL(e.target.files[0]))\n    }\n\n    const DeleteFileImage = () => {\n      URL.revokeObjectURL(file);\n      setFile(\"\");\n    }\n\n\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        \n        const formData = new FormData();\n        formData.append(\"file\",file[0]);\n    \n        let dataSet = {\n            title,\n            content,\n        };\n      \n      const json = JSON.stringify(dataSet)\n      const blob = new Blob([json], { type: \"application/json\" });\n      formData.append(\"request\", blob); \n\n\n      axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n      axios.post(\"/api/v1/boards\", formData, {\n            headers: {\n            \"Content-Type\": \"multipart/form-data\", \n        }})\n        .then((response) => {\n            console.log(response)\n            window.location.href = \"/market\";\n            alert('등록되었습니다.')}\n        );\n    }\n      \n      \n    return (\n      <form onSubmit={onSubmit}>\n          제 목 <input \n          value={title}\n          onChange={(e)=> {setTitle(e.target.value)}}\n          type=\"text\"\n          placeholder=\"제목을 입력하세요\"\n      /><br/>\n      내 용 <input \n          value={content}\n          onChange={(e)=> {setContent(e.target.value)}}\n          type=\"text\"\n          placeholder=\"내용을 입력하세요\"\n      /><br/>\n      \n        <input \n          type=\"file\"\n          multiple=\"multiple\"\n          // onChange={(e) => {setFile(e.target.files)}}\n          onChange={saveFileImage}\n        />\n        <div>\n          {file && ( <img alt=\"sample\" src={file} />)}\n          <button onClick={() => DeleteFileImage()}>삭제</button>\n        </div>\n\n        <button type=\"submit\">제출</button>\n      </form>\n  );\n}\n\nexport default MarketWrite;\n\n"],"mappings":";;;AAAA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAEtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMS,aAAa,GAAIC,CAAD,IAAO;IAC3BF,OAAO,CAACG,GAAG,CAACC,eAAJ,CAAoBF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAApB,CAAD,CAAP;EACD,CAFD;;EAIA,MAAMC,eAAe,GAAG,MAAM;IAC5BJ,GAAG,CAACK,eAAJ,CAAoBT,IAApB;IACAC,OAAO,CAAC,EAAD,CAAP;EACD,CAHD;;EAOA,MAAMS,QAAQ,GAAG,MAAOP,CAAP,IAAa;IAC1BA,CAAC,CAACQ,cAAF;IAGA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuBd,IAAI,CAAC,CAAD,CAA3B;IAEA,IAAIe,OAAO,GAAG;MACVnB,KADU;MAEVE;IAFU,CAAd;IAKF,MAAMkB,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAb;IACA,MAAMI,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACJ,IAAD,CAAT,EAAiB;MAAEK,IAAI,EAAE;IAAR,CAAjB,CAAb;IACAT,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BK,IAA3B;IAGAzB,KAAK,CAAC4B,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,aAA9B,IAAgD,UAASC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EAAxF;IACAhC,KAAK,CAACiC,IAAN,CAAW,gBAAX,EAA6Bf,QAA7B,EAAuC;MACjCW,OAAO,EAAE;QACT,gBAAgB;MADP;IADwB,CAAvC,EAIGK,IAJH,CAISC,QAAD,IAAc;MAChBC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACAG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;MACAC,KAAK,CAAC,UAAD,CAAL;IAAkB,CAPxB;EASD,CA3BD;;EA8BA,oBACE;IAAM,QAAQ,EAAEzB,QAAhB;IAAA,0CACQ;MACJ,KAAK,EAAEd,KADH;MAEJ,QAAQ,EAAGO,CAAD,IAAM;QAACN,QAAQ,CAACM,CAAC,CAACG,MAAF,CAAS8B,KAAV,CAAR;MAAyB,CAFtC;MAGJ,IAAI,EAAC,MAHD;MAIJ,WAAW,EAAC;IAJR;MAAA;MAAA;MAAA;IAAA,QADR,eAME;MAAA;MAAA;MAAA;IAAA,QANF,iCAOI;MACA,KAAK,EAAEtC,OADP;MAEA,QAAQ,EAAGK,CAAD,IAAM;QAACJ,UAAU,CAACI,CAAC,CAACG,MAAF,CAAS8B,KAAV,CAAV;MAA2B,CAF5C;MAGA,IAAI,EAAC,MAHL;MAIA,WAAW,EAAC;IAJZ;MAAA;MAAA;MAAA;IAAA,QAPJ,eAYE;MAAA;MAAA;MAAA;IAAA,QAZF,eAcE;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAC,UAFX,CAGE;MAHF;MAIE,QAAQ,EAAElC;IAJZ;MAAA;MAAA;MAAA;IAAA,QAdF,eAoBE;MAAA,WACGF,IAAI,iBAAM;QAAK,GAAG,EAAC,QAAT;QAAkB,GAAG,EAAEA;MAAvB;QAAA;QAAA;QAAA;MAAA,QADb,eAEE;QAAQ,OAAO,EAAE,MAAMQ,eAAe,EAAtC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QApBF,eAyBE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BH,CA5ED;;GAAMb,W;;KAAAA,W;AA8EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}