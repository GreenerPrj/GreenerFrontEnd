{"ast":null,"code":"var _jsxFileName = \"/Users/bag-yeongmi/react-workspace/todo-react-app/src/Components/pages/board/MarketWrite.js\",\n    _s = $RefreshSig$();\n\n// import React, {useState} from \"react\";\n// import axios from \"axios\";\n// function MarketWrite() {\n//     const onChangeImg = async (e) => {\n//         e.preventDefault();\n//         if(e.target.files){\n//           const uploadFile = e.target.files[0]\n//           const formData = new FormData()\n//           formData.append('files',uploadFile)\n//           formData.append(\n//             \"key\",\n//             new Blob([JSON.stringify(data.info)], { type: \"application/json\" })\n//           );\n//           axios.defaults.headers.common['accessToken'] =`Bearer ${localStorage.getItem(\"access\")}`\n//           await axios({\n//             method: 'post',\n//             url: '/api/v1/boards',\n//             data: formData,\n//             headers: {\n//               'Content-Type': 'multipart/form-data',\n//             },\n//           });\n//         }\n//       }\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     // const [imagePath, setImagePath] = useState(\"\");\n//     const data = {\n//         title: title,\n//         content: content,\n//         // imagePath: imagePath\n//     }\n//     function Submit(e) {\n//         e.preventDefault();\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.post(\"/api/v1/boards\", data)     \n//             .then((response) => {\n//                   window.location.href = \"/market\";\n//                   alert('등록되었습니다.')\n//             });\n//     }\n// return (\n//     <>\n//     <h1>글쓰기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//         placeholder=\"제목을 입력하세요\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//         placeholder=\"내용을 입력하세요\"\n//     /><br/>\n//     {/* <form className=\"upload_input\">\n//          <input \n//         value={imagePath}\n//         onChange={onLoadFile}\n//         type=\"file\"\n//         accept=\"img/*\"\n//     />\n//     <label htmlFor=\"imgae\">파일 선택하기</label>\n//     </form> */}\n//     <form>\n//         <label htmlFor=\"profile-upload\" />\n//         <input type=\"file\" id=\"profile-upload\" accept=\"image/*\" onChange={onChangeImg}/>\n//     </form>\n//   <br/>\n//     <button onClick={Submit}>글쓰기</button>\n//     </form>\n//     </>\n// )\n// }\n// export default MarketWrite;\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MarketWrite = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [boardtype, setBoardtype] = useState(\"\");\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    e.persist();\n    let files = e.target.profile_files.files;\n    let formData = new FormData();\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append(\"files\", files[i]);\n    }\n\n    console.log(formData);\n    let dataSet = {\n      title: title,\n      content: content,\n      boardtype: boardtype\n    };\n    formData.append(\"data\", JSON.stringify(dataSet));\n    console.log(dataSet);\n    axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n    const postSurvey = await axios({\n      method: \"POST\",\n      url: \"/api/v1/boards\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      },\n      data: formData\n    });\n    console.log(postSurvey);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => onSubmit(e),\n    children: [\"\\uC81C \\uBAA9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => {\n        setTitle(e.target.value);\n      },\n      type: \"text\",\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 8\n    }, this), \"\\uB0B4 \\uC6A9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: content,\n      onChange: e => {\n        setContent(e.target.value);\n      },\n      type: \"text\",\n      placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 8\n    }, this), \"\\uBCF4\\uB4DC\\uD0C0\\uC785 \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: boardtype,\n      onChange: e => {\n        setBoardtype(e.target.value);\n      },\n      type: \"text\",\n      placeholder: \"\\uD0C0\\uC785\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"profile_files\",\n      multiple: \"multiple\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MarketWrite, \"obrsQekZRTPRQ29eT/a/cSpzL0s=\");\n\n_c = MarketWrite;\nexport default MarketWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketWrite\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","MarketWrite","title","setTitle","content","setContent","boardtype","setBoardtype","onSubmit","e","preventDefault","persist","files","target","profile_files","formData","FormData","i","length","append","console","log","dataSet","JSON","stringify","defaults","headers","common","localStorage","getItem","postSurvey","method","url","mode","data","value"],"sources":["/Users/bag-yeongmi/react-workspace/todo-react-app/src/Components/pages/board/MarketWrite.js"],"sourcesContent":["// import React, {useState} from \"react\";\n// import axios from \"axios\";\n\n\n// function MarketWrite() {\n\n//     const onChangeImg = async (e) => {\n//         e.preventDefault();\n        \n//         if(e.target.files){\n//           const uploadFile = e.target.files[0]\n//           const formData = new FormData()\n//           formData.append('files',uploadFile)\n//           formData.append(\n//             \"key\",\n//             new Blob([JSON.stringify(data.info)], { type: \"application/json\" })\n//           );\n          \n//           axios.defaults.headers.common['accessToken'] =`Bearer ${localStorage.getItem(\"access\")}`\n//           await axios({\n//             method: 'post',\n//             url: '/api/v1/boards',\n//             data: formData,\n//             headers: {\n//               'Content-Type': 'multipart/form-data',\n//             },\n//           });\n//         }\n//       }\n\n//     const [title, setTitle] = useState(\"\");\n//     const [content, setContent] = useState(\"\");\n//     // const [imagePath, setImagePath] = useState(\"\");\n\n//     const data = {\n//         title: title,\n//         content: content,\n//         // imagePath: imagePath\n//     }\n\n//     function Submit(e) {\n//         e.preventDefault();\n\n//         axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n//         axios.post(\"/api/v1/boards\", data)     \n//             .then((response) => {\n//                   window.location.href = \"/market\";\n//                   alert('등록되었습니다.')\n//             });\n//     }\n\n// return (\n//     <>\n//     <h1>글쓰기</h1>\n//     <form>\n//     제 목 <input \n//         value={title}\n//         onChange={(e)=> {setTitle(e.target.value)}}\n//         type=\"text\"\n//         placeholder=\"제목을 입력하세요\"\n//     /><br/>\n//     내 용 <input \n//         value={content}\n//         onChange={(e)=> {setContent(e.target.value)}}\n//         type=\"text\"\n//         placeholder=\"내용을 입력하세요\"\n//     /><br/>\n//     {/* <form className=\"upload_input\">\n//          <input \n//         value={imagePath}\n//         onChange={onLoadFile}\n//         type=\"file\"\n//         accept=\"img/*\"\n        \n//     />\n//     <label htmlFor=\"imgae\">파일 선택하기</label>\n//     </form> */}\n//     <form>\n//         <label htmlFor=\"profile-upload\" />\n//         <input type=\"file\" id=\"profile-upload\" accept=\"image/*\" onChange={onChangeImg}/>\n//     </form>\n//   <br/>\n\n//     <button onClick={Submit}>글쓰기</button>\n//     </form>\n//     </>\n// )\n// }\n\n// export default MarketWrite;\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nconst MarketWrite = () => {\n\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [boardtype, setBoardtype] = useState(\"\");\n    \n  const onSubmit = async (e) => {\n    e.preventDefault();\n    e.persist();\n\n    let files = e.target.profile_files.files;\n    let formData = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      formData.append(\"files\", files[i]);\n    }\n    console.log(formData)\n\n    let dataSet = {\n        title: title,\n        content: content,\n        boardtype: boardtype\n    };\n\n    formData.append(\"data\", JSON.stringify(dataSet));\n    console.log(dataSet);\n\n    axios.defaults.headers.common['accessToken'] = `Bearer ${localStorage.getItem(\"access\")}`;\n    const postSurvey = await axios({\n      method: \"POST\",\n      url: \"/api/v1/boards\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      data: formData,\n    });\n    \n    console.log(postSurvey);\n  };\n\n  return (\n    <form onSubmit={(e) => onSubmit(e)}>\n        제 목 <input \n         value={title}\n         onChange={(e)=> {setTitle(e.target.value)}}\n         type=\"text\"\n         placeholder=\"제목을 입력하세요\"\n     /><br/>\n     내 용 <input \n         value={content}\n         onChange={(e)=> {setContent(e.target.value)}}\n         type=\"text\"\n         placeholder=\"내용을 입력하세요\"\n     /><br/>\n     보드타입 <input \n         value={boardtype}\n         onChange={(e)=> {setBoardtype(e.target.value)}}\n         type=\"text\"\n         placeholder=\"타입을 입력하세요\"\n     /><br/>\n      <input \n        type=\"file\"\n        name=\"profile_files\"\n        multiple=\"multiple\"\n      /><br/>\n\n      <button type=\"submit\">제출</button>\n    </form>\n  );\n};\n\nexport default MarketWrite;"],"mappings":"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"},"metadata":{},"sourceType":"module"}